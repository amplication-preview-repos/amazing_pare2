/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsNumber,
  Min,
  Max,
  IsInt,
} from "class-validator";
import { InventoryCreateNestedManyWithoutMedicationsInput } from "./InventoryCreateNestedManyWithoutMedicationsInput";
import { Type } from "class-transformer";
import { PrescriptionCreateNestedManyWithoutMedicationsInput } from "./PrescriptionCreateNestedManyWithoutMedicationsInput";
import { SaleCreateNestedManyWithoutMedicationsInput } from "./SaleCreateNestedManyWithoutMedicationsInput";

@InputType()
class MedicationCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => InventoryCreateNestedManyWithoutMedicationsInput,
  })
  @ValidateNested()
  @Type(() => InventoryCreateNestedManyWithoutMedicationsInput)
  @IsOptional()
  @Field(() => InventoryCreateNestedManyWithoutMedicationsInput, {
    nullable: true,
  })
  inventories?: InventoryCreateNestedManyWithoutMedicationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => PrescriptionCreateNestedManyWithoutMedicationsInput,
  })
  @ValidateNested()
  @Type(() => PrescriptionCreateNestedManyWithoutMedicationsInput)
  @IsOptional()
  @Field(() => PrescriptionCreateNestedManyWithoutMedicationsInput, {
    nullable: true,
  })
  prescriptions?: PrescriptionCreateNestedManyWithoutMedicationsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  quantityInStock?: number | null;

  @ApiProperty({
    required: false,
    type: () => SaleCreateNestedManyWithoutMedicationsInput,
  })
  @ValidateNested()
  @Type(() => SaleCreateNestedManyWithoutMedicationsInput)
  @IsOptional()
  @Field(() => SaleCreateNestedManyWithoutMedicationsInput, {
    nullable: true,
  })
  sales?: SaleCreateNestedManyWithoutMedicationsInput;
}

export { MedicationCreateInput as MedicationCreateInput };
